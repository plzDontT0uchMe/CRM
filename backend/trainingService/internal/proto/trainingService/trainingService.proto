syntax = "proto3";

package trainingService;
option go_package = "/trainingService";

message Program {
  int64 id = 1;
  int64 idClient = 2;
  int64 idCreator = 3;
  string name = 4;
  string description = 5;
  repeated Exercise exercises = 6;
}

message Exercise {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string image = 4;
  repeated string muscles = 5;
}

message Status {
  bool successfully = 1;
  string message = 2;
  int64 httpStatus = 3;
}

message GetExercisesRequest {}

message GetExercisesResponse {
  repeated Exercise exercises = 1;
  Status status = 2;
}

message GetExerciseByIdRequest {
  int64 id = 1;
}

message GetExerciseByIdResponse {
  Exercise exercise = 1;
  Status status = 2;
}

message CreateProgramRequest {
  int64 id = 1;
  string name = 2;
  string description = 3;
  repeated Exercise exercises = 4;
}

message CreateProgramResponse {
  Status status = 1;
}

message GetProgramsByUserIdRequest {
  int64 id = 1;
}

message GetProgramsByUserIdResponse {
  repeated Program programs = 1;
  Status status = 2;
}

message DeleteProgramLocalRequest {
  int64 id = 1;
  int64 idCreator = 2;
}

message DeleteProgramLocalResponse {
  Status status = 1;
}

message DeleteProgramRequest {
  int64 id = 1;
  int64 idCreator = 2;
}

message DeleteProgramResponse {
  Status status = 1;
}

message ShareProgramRequest {
  int64 id = 1;
  int64 idCreator = 2;
  int64 idClient = 3;
}

message ShareProgramResponse {
  Status status = 1;
}

message ChangeProgramRequest {
  Program program = 1;
}

message ChangeProgramResponse {
  Status status = 1;
}

service TrainingService {
  rpc GetExercises(GetExercisesRequest) returns (GetExercisesResponse);
  rpc GetExerciseById(GetExerciseByIdRequest) returns (GetExerciseByIdResponse);
  rpc CreateProgram(CreateProgramRequest) returns (CreateProgramResponse);
  rpc GetProgramsByUserId(GetProgramsByUserIdRequest) returns (GetProgramsByUserIdResponse);
  rpc DeleteProgramLocal(DeleteProgramLocalRequest) returns (DeleteProgramLocalResponse);
  rpc DeleteProgram(DeleteProgramRequest) returns (DeleteProgramResponse);
  rpc ShareProgram(ShareProgramRequest) returns (ShareProgramResponse);
  rpc ChangeProgram(ChangeProgramRequest) returns (ChangeProgramResponse);
}