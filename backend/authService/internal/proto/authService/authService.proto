syntax="proto3";

import "google/protobuf/timestamp.proto";

package authService;
option go_package = "/authService";

message Account {
  int64 id = 1;
  string login = 2;
  string password = 3;
  google.protobuf.Timestamp lastActivity = 5;
  google.protobuf.Timestamp dateCreated = 6;
}

message Session {
  int64 id = 1;
  int64 idAccount = 2;
  string accessToken = 3;
  google.protobuf.Timestamp dateExpirationAccessToken = 4;
  string refreshToken = 5;
  google.protobuf.Timestamp dateExpirationRefreshToken = 6;
}

message Status {
  bool successfully = 1;
  string message = 2;
  int64 httpStatus = 3;
}

message AuthorizationRequest {
  Account account = 1;
}

message AuthorizationResponse {
  Session session = 1;
  Status status = 2;
}

message RegistrationRequest {
  Account account = 1;
}

message RegistrationResponse {
  Account account = 1;
  Session session = 2;
  Status status = 3;
}

message LogoutRequest {
  Session session = 1;
}

message LogoutResponse {
  Status status = 1;
}

message CheckAuthorizationRequest {
  Session session = 1;
}

message CheckAuthorizationResponse {
  Status status = 2;
}

message UpdateAccessTokenRequest {
  Session session = 1;
}

message UpdateAccessTokenResponse {
  Session session = 1;
  Status status = 2;
}

message GetAccountByAccessTokenRequest {
  Session session = 1;
}

message GetAccountByAccessTokenResponse {
  Account account = 1;
  Status status = 2;
}

message GetAccountByIdRequest {
  Account account = 1;
}

message GetAccountByIdResponse {
  Account account = 1;
  Status status = 2;
}

message GetAccountsRequest {
  repeated int64 id = 1;
}

message GetAccountsResponse {
  map<int64, Account> accounts = 1;
  Status status = 2;
}

service AuthService {
  rpc Authorization (AuthorizationRequest) returns (AuthorizationResponse) {}
  rpc Registration (RegistrationRequest) returns (RegistrationResponse) {}
  rpc Logout (LogoutRequest) returns (LogoutResponse) {}
  rpc CheckAuthorization (CheckAuthorizationRequest) returns (CheckAuthorizationResponse) {}
  rpc UpdateAccessToken (UpdateAccessTokenRequest) returns (UpdateAccessTokenResponse) {}
  rpc GetAccountByAccessToken (GetAccountByAccessTokenRequest) returns (GetAccountByAccessTokenResponse) {}
  rpc GetAccountById (GetAccountByIdRequest) returns (GetAccountByIdResponse) {}
  rpc GetAccounts (GetAccountsRequest) returns (GetAccountsResponse) {}
}